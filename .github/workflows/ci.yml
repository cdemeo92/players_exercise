name: Front-End CI
run-name: ${{ github.actor }} is running
env:
  WORK_DIR: front-end
  NODE_VERSION: latest
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Check npm cache
        id: cache-npm
        uses: actions/cache@v3
        with:
          key: cache-${{ hashFiles('package-lock.json') }}
          path: |
            .npm
            node_modules
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Install Dependencies
        run: npm ci --audit false --cache .npm --prefer-offline

  build:
    name: Build
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Retrieve node_modules from cache
        uses: actions/cache/restore@v4
        with:
          key: cache-${{ hashFiles('package-lock.json') }}
          path: |
            .npm
            node_modules
      - name: Build project
        run: npm run build

  unit:
    name: Unit tests
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Retrieve node_modules from cache
        uses: actions/cache/restore@v4
        with:
          key: cache-${{ hashFiles('package-lock.json') }}
          path: |
            .npm
            node_modules
      - name: Run Tests
        run: npm run test:ci
      - name: Comment test results on PR
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: "${{ env.WORK_DIR }}/junit.xml"