name: Front-End CI
run-name: ${{ github.actor }} is running
env:
  WORK_DIR: front-end
  NODE_VERSION: lts/*
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Check npm cache
        id: cache-npm
        uses: actions/cache@v3
        with:
          key: cache-${{ hashFiles('package-lock.json') }}
          path: |
            .npm
            node_modules
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Install Dependencies
        run: npm ci --audit false --cache .npm --prefer-offline

  build:
    name: Build
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Retrieve node_modules from cache
        uses: actions/cache/restore@v4
        with:
          key: cache-${{ hashFiles('package-lock.json') }}
          path: |
            .npm
            node_modules
      - name: Build project
        run: npm run build

  unit:
    name: Unit tests
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Retrieve node_modules from cache
        uses: actions/cache/restore@v4
        with:
          key: cache-${{ hashFiles('package-lock.json') }}
          path: |
            .npm
            node_modules
      - name: Run tests
        run: npm run test:ci
      - name: Comment test results on PR
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: 'junit.xml'

  integ:
    name: Integration tests
    needs: [build, unit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Retrieve node_modules from cache
        uses: actions/cache/restore@v4
        with:
          key: cache-${{ hashFiles('package-lock.json') }}
          path: |
            .npm
            node_modules
      - name: Run integration tests
        run: npm run test:integ

  publish:
    name: Publish
    needs: [unit, integ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Retrieve node_modules from cache
        uses: actions/cache/restore@v4
        with:
          key: cache-${{ hashFiles('package-lock.json') }}
          path: |
            .npm
            node_modules
      - name: Semantic release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  e2e:
    name: e2e tests
    needs: publish
    runs-on: ubuntu-latest
    env:
      STAGE: e2e
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    services:
      mongodb:
        image: mongo:latest
        options: >
          --health-cmd='mongo --eval "db.runCommand({ connectionStatus: 1 })"'
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          -p 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ env.DB_USER }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ env.DB_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Retrieve node_modules from cache
        uses: actions/cache/restore@v4
        with:
          key: cache-${{ hashFiles('package-lock.json') }}
          path: |
            .npm
            node_modules
      - name: Run e2e tests
        run: npm run test:e2e

  deploy:
    name: Deploy
    needs: e2e
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Retrieve node_modules from cache
        uses: actions/cache/restore@v4
        with:
          key: cache-${{ hashFiles('package-lock.json') }}
          path: |
            .npm
            node_modules
      - name: Deploy
        run: echo "Deploying to production"

  smoke:
    name: Smoke tests
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run smoke tests
        run: echo "Running smoke tests"
